-- 0001_init migration\n-- Create extension for UUIDs if needed\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n\n-- Users\nCREATE TABLE users (\n  id SERIAL PRIMARY KEY,\n  email TEXT UNIQUE NOT NULL,\n  password_hash TEXT NOT NULL,\n  first_name TEXT,\n  last_name TEXT,\n  phone TEXT,\n  role TEXT NOT NULL CHECK (role IN ('tenant','service_tech','manager','admin')),\n  employee_id TEXT UNIQUE,\n  is_active BOOLEAN DEFAULT TRUE,\n  email_verified BOOLEAN DEFAULT FALSE,\n  created_at TIMESTAMPTZ DEFAULT now(),\n  updated_at TIMESTAMPTZ DEFAULT now()\n);\n\n-- Properties\nCREATE TABLE properties (\n  id SERIAL PRIMARY KEY,\n  name TEXT NOT NULL,\n  address TEXT,\n  city TEXT,\n  state TEXT,\n  zip_code TEXT,\n  manager_id INTEGER REFERENCES users(id),\n  property_type TEXT,\n  total_units INTEGER,\n  phone TEXT,\n  emergency_contact TEXT,\n  created_at TIMESTAMPTZ DEFAULT now(),\n  updated_at TIMESTAMPTZ DEFAULT now()\n);\n\n-- Units\nCREATE TABLE units (\n  id SERIAL PRIMARY KEY,\n  property_id INTEGER REFERENCES properties(id) ON DELETE CASCADE,\n  unit_number TEXT NOT NULL,\n  tenant_id INTEGER REFERENCES users(id),\n  bedrooms INTEGER,\n  bathrooms INTEGER,\n  square_feet INTEGER,\n  monthly_rent NUMERIC(10,2),\n  lease_start_date DATE,\n  lease_end_date DATE,\n  is_occupied BOOLEAN DEFAULT FALSE,\n  created_at TIMESTAMPTZ DEFAULT now(),\n  updated_at TIMESTAMPTZ DEFAULT now(),\n  UNIQUE(property_id,unit_number)\n);\n\n-- sequence for CAB ticket numbers\nCREATE SEQUENCE ticket_number_seq START 1;\n\n-- Tickets\nCREATE TABLE tickets (\n  id SERIAL PRIMARY KEY,\n  ticket_number TEXT UNIQUE DEFAULT ('CAB'||LPAD(nextval('ticket_number_seq')::text,6,'0')),\n  property_id INTEGER REFERENCES properties(id),\n  unit_id INTEGER REFERENCES units(id),\n  tenant_id INTEGER REFERENCES users(id),\n  assigned_manager_id INTEGER REFERENCES users(id),\n  assigned_tech_id INTEGER REFERENCES users(id),\n  issue_type TEXT NOT NULL,\n  problem_description TEXT,\n  urgency TEXT NOT NULL,\n  status TEXT NOT NULL DEFAULT 'open',\n  priority INTEGER,\n  submitted_date TIMESTAMPTZ DEFAULT now(),\n  anticipated_completion_date TIMESTAMPTZ,\n  completion_date TIMESTAMPTZ,\n  contact_name TEXT,\n  contact_phone TEXT,\n  contact_email TEXT,\n  submission_method TEXT DEFAULT 'form',\n  ai_analysis TEXT,\n  ai_assignment_reason TEXT,\n  is_deleted BOOLEAN DEFAULT FALSE,\n  created_at TIMESTAMPTZ DEFAULT now(),\n  updated_at TIMESTAMPTZ DEFAULT now()\n);\n\n-- Indexes for performance\nCREATE INDEX idx_tickets_status ON tickets(status);\nCREATE INDEX idx_tickets_assigned_tech ON tickets(assigned_tech_id);\nCREATE INDEX idx_tickets_submitted_date ON tickets(submitted_date);\nCREATE INDEX idx_tickets_tenant ON tickets(tenant_id);\nCREATE INDEX idx_tickets_property ON tickets(property_id);\n\n-- Work Logs\nCREATE TABLE work_logs (\n  id SERIAL PRIMARY KEY,\n  ticket_id INTEGER REFERENCES tickets(id) ON DELETE CASCADE,\n  technician_id INTEGER REFERENCES users(id),\n  work_date DATE NOT NULL,\n  hours_worked NUMERIC(5,2) NOT NULL,\n  is_billable BOOLEAN DEFAULT TRUE,\n  miles_traveled NUMERIC(6,2),\n  work_notes TEXT,\n  created_at TIMESTAMPTZ DEFAULT now(),\n  updated_at TIMESTAMPTZ DEFAULT now()\n);\n\n-- Ticket Costs\nCREATE TABLE ticket_costs (\n  id SERIAL PRIMARY KEY,\n  ticket_id INTEGER UNIQUE REFERENCES tickets(id) ON DELETE CASCADE,\n  material_cost NUMERIC(12,2) DEFAULT 0,\n  pwo_contractor_cost NUMERIC(12,2) DEFAULT 0,\n  pwo_cabot_fee NUMERIC(12,2) DEFAULT 0,\n  contractor_cost NUMERIC(12,2) DEFAULT 0,\n  cabot_fee NUMERIC(12,2) DEFAULT 0,\n  miles_cost NUMERIC(12,2) DEFAULT 0,\n  service_cost NUMERIC(12,2) DEFAULT 0,\n  service_tax NUMERIC(12,2) DEFAULT 0,\n  total_pwo_contractor_cost NUMERIC(12,2) GENERATED ALWAYS AS (material_cost + pwo_contractor_cost + pwo_cabot_fee) STORED,\n  total_contractor_cost NUMERIC(12,2) GENERATED ALWAYS AS (contractor_cost + cabot_fee) STORED,\n  total_service_cost NUMERIC(12,2) GENERATED ALWAYS AS (miles_cost + service_cost + service_tax) STORED,\n  total_cost NUMERIC(12,2) GENERATED ALWAYS AS (total_pwo_contractor_cost + total_contractor_cost + total_service_cost) STORED\n);\n\n-- Ticket Updates\nCREATE TABLE ticket_updates (\n  id SERIAL PRIMARY KEY,\n  ticket_id INTEGER REFERENCES tickets(id) ON DELETE CASCADE,\n  user_id INTEGER REFERENCES users(id),\n  update_type TEXT NOT NULL,\n  message TEXT,\n  old_value TEXT,\n  new_value TEXT,\n  is_internal BOOLEAN DEFAULT FALSE,\n  created_at TIMESTAMPTZ DEFAULT now()\n);\n\n-- Trigger function for updated_at\nCREATE OR REPLACE FUNCTION set_updated_at()\nRETURNS TRIGGER AS $$\nBEGIN\n  NEW.updated_at = now();\n  RETURN NEW;\nEND;$$ LANGUAGE plpgsql;\n\n-- Attach triggers\nCREATE TRIGGER trg_users_updated\n  BEFORE UPDATE ON users\n  FOR EACH ROW EXECUTE PROCEDURE set_updated_at();\nCREATE TRIGGER trg_properties_updated\n  BEFORE UPDATE ON properties\n  FOR EACH ROW EXECUTE PROCEDURE set_updated_at();\nCREATE TRIGGER trg_units_updated\n  BEFORE UPDATE ON units\n  FOR EACH ROW EXECUTE PROCEDURE set_updated_at();\nCREATE TRIGGER trg_tickets_updated\n  BEFORE UPDATE ON tickets\n  FOR EACH ROW EXECUTE PROCEDURE set_updated_at();\nCREATE TRIGGER trg_work_logs_updated\n  BEFORE UPDATE ON work_logs\n  FOR EACH ROW EXECUTE PROCEDURE set_updated_at();
